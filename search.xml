<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2020/09/27/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Test</title>
    <url>/2020/09/27/Test/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul>
<li>最近闲来无事，又正好在学习Python数据分析统计，于是便萌生一种想法：统计京东购买记录，分析全国女性平均Size</li>
</ul>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul>
<li>首先查询京东网站，输入查询内容xz，查到87万+商品</li>
<li>购买size可以在评论区找到（就摆在那儿，那也太简单了，后面才知道我想多了。。。）<br><img src="https://img-blog.csdnimg.cn/20200327095835323.png" alt="在这里插入图片描述"></li>
<li>先看域名，发现每一个域名的构成都是<a href="https://item.jd.com/%E7%84%B6%E5%90%8E%E5%8A%A0%E4%B8%80%E4%B8%B2%E6%95%B0%E5%AD%97.html%EF%BC%8C%E7%BB%8F%E9%AA%8C%E5%91%8A%E8%AF%89%E6%88%91%EF%BC%8C%E8%BF%99%E4%B8%B2%E6%95%B0%E5%AD%97%E4%B8%80%E5%AE%9A%E6%98%AF%E5%95%86%E5%93%81id%E3%80%82">https://item.jd.com/然后加一串数字.html，经验告诉我，这串数字一定是商品id。</a></li>
<li>找id的话就要到搜索页面找了，果然，在分析搜索页面之后，发现id就躺在静态页面中。<img src="https://img-blog.csdnimg.cn/20200327095929529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3MTg0Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
<li>思路有了，准备写代码。。。</li>
</ul>
<h2 id="开始码代码"><a href="#开始码代码" class="headerlink" title="开始码代码"></a>开始码代码</h2><ul>
<li>第一步当然是获取id了，通过分析搜索域名（不得不说jd的反爬机制，唉，这里不好评价，自行体会，分析过程如下。）<img src="https://img-blog.csdnimg.cn/2020032709595885.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3MTg0Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
<li>需要注意的就是keyword，wq（全拼），还有后面的page和s，这几个参数是改变的<blockquote>
<p>keyword传入商品名称，wq传入商品全拼，page传入商品页（jd是按照奇数排序）,s的话，需要计算，见代码。</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#爬取商品id</span></span><br><span class="line">headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0) Gecko/20100101 Firefox/75.0&#x27;</span>&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_id</span>(<span class="params">key_word,wq</span>):</span></span><br><span class="line">    <span class="comment">#jd_url=&#x27;https://search.jd.com/Search?keyword=%E5%A5%B3%E6%80%A7%E5%86%85%E8%A1%A3&amp;enc=utf-8&amp;wq=%E5%A5%B3%E6%80%A7nei%27yi&amp;pvid=fafd7af082734ae1a4a6cb674f98b2e4&#x27;</span></span><br><span class="line">    jd_url = <span class="string">&#x27;https://search.jd.com/Search&#x27;</span></span><br><span class="line">    product_ids = []</span><br><span class="line">    <span class="comment"># 爬前3页的商品</span></span><br><span class="line">    j = <span class="number">51</span>;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">17</span>,<span class="number">25</span>,<span class="number">2</span>):</span><br><span class="line">        param = &#123;<span class="string">&#x27;keyword&#x27;</span>: key_word, <span class="string">&#x27;enc&#x27;</span>: <span class="string">&#x27;utf-8&#x27;</span>, <span class="string">&#x27;qrst&#x27;</span>:<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;rt&#x27;</span>:<span class="number">1</span>, <span class="string">&#x27;stop&#x27;</span>:<span class="number">1</span>, <span class="string">&#x27;vt&#x27;</span>:<span class="number">2</span>, <span class="string">&#x27;wq&#x27;</span>:wq, <span class="string">&#x27;page&#x27;</span>:i, <span class="string">&#x27;s&#x27;</span>:j, <span class="string">&#x27;click&#x27;</span>:<span class="number">0</span>&#125;</span><br><span class="line">        response = requests.get(jd_url,params = param,headers=headers)</span><br><span class="line">        <span class="comment"># 商品id</span></span><br><span class="line">        ids = re.findall(<span class="string">&#x27;data-pid=&quot;(.*?)&quot;&#x27;</span>, response.text,re.S)</span><br><span class="line">        product_ids += ids</span><br><span class="line">        <span class="keyword">if</span> i!= <span class="number">3</span>:</span><br><span class="line">            j = j+<span class="number">50</span>+i<span class="number">-4</span>;</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            j+=<span class="number">50</span></span><br><span class="line">    <span class="keyword">return</span> product_ids</span><br></pre></td></tr></table></figure></li>
<li>获取id之后我们进入页面，准备获取评价里的购买尺寸，用静态网站方法爬一下，正则表达式分析一手，发现根本无法获得购买尺寸，再一看，获取的html页面中根本没有评价内容，经验告诉我这是通过json接口传入的。</li>
<li>于是，就开始了我的找接口。。。。（此处省略两个小时）</li>
<li>在我的不懈努力下，终于找到了接口。。。<img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMDMvMjcvbFZrUVNMZ2hLQ0dudHF2LnBuZw?x-oss-process=image/format,png" alt="图片.png"></li>
<li>下面分析接口url（也不难）。<br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMjAvMDMvMjcvR0JPVjJiSHl0OEF4cDRuLnBuZw?x-oss-process=image/format,png" alt="图片.png">- 分析并不难，直接上代码，这次没有用params的参数，而是用的字符串拼接，因为params一直报错，搞了好久。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#爬取Size</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSizes</span>(<span class="params">ids</span>):</span></span><br><span class="line">    Sizes = []</span><br><span class="line">    <span class="keyword">for</span> id <span class="keyword">in</span> ids:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">8</span>):</span><br><span class="line">            url = <span class="string">&#x27;https://club.jd.com/comment/productPageComments.action?callback=fetchJSON_comment98&amp;productId=&#x27;</span>+id+<span class="string">&#x27;&amp;score=0&amp;sortType=5&amp;page=&#x27;</span>+str(i)+<span class="string">&#x27;&amp;pageSize=10&amp;isShadowSku=0&amp;fold=1&#x27;</span></span><br><span class="line">            response = requests.get(url)</span><br><span class="line">            size = re.findall(<span class="string">&#x27;&quot;productSize&quot;:&quot;(.*?)&quot;&#x27;</span>,response.text)</span><br><span class="line">            Sizes+=size</span><br><span class="line">    <span class="keyword">return</span> Sizes</span><br></pre></td></tr></table></figure>
<ul>
<li>爬取Size后，发现Size并不统一，有的用XXL，有的用ABC，所以需要清洗一下获取的数据，如下</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#数据清洗（统一尺码）</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unified</span>(<span class="params">str</span>):</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;E&#x27;</span> <span class="keyword">in</span> str:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;E&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;D&#x27;</span> <span class="keyword">in</span> str:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;D&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;C&#x27;</span> <span class="keyword">in</span> str:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;C&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;B&#x27;</span> <span class="keyword">in</span> str:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;B&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;A&#x27;</span> <span class="keyword">in</span> str:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;A&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;XXL&#x27;</span> <span class="keyword">in</span> str:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;E&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;XL&#x27;</span> <span class="keyword">in</span> str:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;D&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;L&#x27;</span> <span class="keyword">in</span> str:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;C&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;M&#x27;</span> <span class="keyword">in</span> str:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;B&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;S&#x27;</span> <span class="keyword">in</span> str:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;A&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;均码&#x27;</span> <span class="keyword">in</span> str:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;B&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;大&#x27;</span> <span class="keyword">in</span> str:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;C&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;小&#x27;</span> <span class="keyword">in</span> str:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;A&#x27;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>搞定这一切后，想要对Size进行分析，但是我感觉直接在PyCharm里面分析有点难看，好吧，主要是想用上最近学的juty notebook。于是我便把获取到的数据先写入MySQL，再转到juty notebook进行分析。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#运行并写入数据库</span></span><br><span class="line">conn = pymysql.connect(host=<span class="string">&#x27;localhost&#x27;</span>,user=<span class="string">&#x27;root&#x27;</span>,password=<span class="string">&#x27;123&#x27;</span>,database=<span class="string">&#x27;size&#x27;</span>,port=<span class="number">3306</span>) <span class="comment">#连接数据库</span></span><br><span class="line">cursor = conn.cursor()</span><br><span class="line">ids = get_id(<span class="string">&quot;胸罩&quot;</span>,<span class="string">&quot;xiong&#x27;zhao&quot;</span>) <span class="comment">#获取id</span></span><br><span class="line">Sizes = getSizes(ids) <span class="comment">#获取sizes</span></span><br><span class="line">Sizes_flush = [] </span><br><span class="line"><span class="keyword">for</span> size <span class="keyword">in</span> Sizes:  <span class="comment">#清洗Sizes</span></span><br><span class="line">    <span class="keyword">if</span> unified(size) <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        Sizes_flush+=unified(size)</span><br><span class="line">        sql = <span class="string">&quot;INSERT INTO jd_size(size) values(&#x27;&quot;</span> + unified(size) + <span class="string">&quot;&#x27;);&quot;</span></span><br><span class="line">        cursor.execute(sql)  <span class="comment">#入库</span></span><br><span class="line">        conn.commit()</span><br></pre></td></tr></table></figure>
<h2 id="开始分析"><a href="#开始分析" class="headerlink" title="开始分析"></a>开始分析</h2><ul>
<li>首先连接数据库并读入数据<br><img src="https://img-blog.csdnimg.cn/20200327093937468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3MTg0Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
<li>然后对获取到的数据进行分类汇总<br><img src="https://img-blog.csdnimg.cn/20200327094126886.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3MTg0Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
<li>汇总之后就明显可以看出来，B占大多数了，然后开始绘制一下饼图。<img src="https://img-blog.csdnimg.cn/20200327094236284.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3MTg0Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
<li>果然，B占一半以上，接下来再绘制一下直方图。<img src="https://img-blog.csdnimg.cn/20200327094332838.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM3MTg0Mg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><h3 id="很直观是不是？最后送大家一套2020最有趣的Pyhon项目实战视频教程，点我进来获取，跟着练习下，希望大家一起进步哦！"><a href="#很直观是不是？最后送大家一套2020最有趣的Pyhon项目实战视频教程，点我进来获取，跟着练习下，希望大家一起进步哦！" class="headerlink" title="很直观是不是？最后送大家一套2020最有趣的Pyhon项目实战视频教程，点我进来获取，跟着练习下，希望大家一起进步哦！"></a>很直观是不是？最后送大家一套2020最有趣的Pyhon项目实战视频教程，<a href="http://note.youdao.com/noteshare?id=a3a533247e4c084a72c9ae88c271e3d1">点我进来获取</a>，跟着练习下，希望大家一起进步哦！</h3><h2 id="至此，我们的分析项目就完成了，经统计，全国女性大多为B杯。"><a href="#至此，我们的分析项目就完成了，经统计，全国女性大多为B杯。" class="headerlink" title="至此，我们的分析项目就完成了，经统计，全国女性大多为B杯。"></a>至此，我们的分析项目就完成了，经统计，全国女性大多为B杯。</h2><blockquote>
<p>完整项目代码见<a href="https://github.com/lrffun/My_Python/tree/master/Size">https://github.com/lrffun/My_Python/tree/master/Size</a></p>
</blockquote>
</li>
</ul>
]]></content>
  </entry>
</search>
